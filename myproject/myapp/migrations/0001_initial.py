# Generated by Django 5.0.6 on 2024-05-29 18:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('CustomerID', models.AutoField(primary_key=True, serialize=False)),
                ('CustomerName', models.CharField(max_length=255)),
                ('ContactName', models.CharField(max_length=255)),
                ('Address', models.CharField(max_length=255)),
                ('City', models.CharField(max_length=255)),
                ('PostalCode', models.PositiveIntegerField()),
                ('Country', models.CharField(max_length=155)),
                ('Email', models.EmailField(max_length=254, unique=True)),
                ('Phone', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('ProductID', models.AutoField(primary_key=True, serialize=False)),
                ('ProductName', models.CharField(max_length=255)),
                ('Description', models.CharField(max_length=255)),
                ('Price', models.DecimalField(decimal_places=4, max_digits=10)),
                ('TaxRate', models.DecimalField(decimal_places=4, max_digits=10)),
                ('StockQuantity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_type', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='TaxRates',
            fields=[
                ('TaxRateID', models.AutoField(primary_key=True, serialize=False)),
                ('Description', models.CharField(max_length=255)),
                ('Rate', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('InvoiceID', models.AutoField(primary_key=True, serialize=False)),
                ('InvoiceDate', models.DateTimeField()),
                ('DueDate', models.DateTimeField()),
                ('TotalAmount', models.FloatField()),
                ('Status', models.CharField(max_length=15)),
                ('CustomerID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.customers')),
            ],
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('PaymentID', models.AutoField(primary_key=True, serialize=False)),
                ('PaymentDate', models.DateTimeField()),
                ('Amount', models.FloatField()),
                ('PaymentMethod', models.CharField(max_length=55)),
                ('InvoiceID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.invoices')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceItems',
            fields=[
                ('InvoiceItemID', models.AutoField(primary_key=True, serialize=False)),
                ('Quantity', models.IntegerField()),
                ('UnitPrice', models.FloatField()),
                ('TotalPrice', models.FloatField()),
                ('TaxAmount', models.FloatField()),
                ('InvoiceID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.invoices')),
                ('ProductID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.products')),
            ],
        ),
        migrations.CreateModel(
            name='CoreUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('UserID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=155)),
                ('UserName', models.CharField(max_length=255, unique=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('RoleID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.role')),
            ],
            options={
                'db_table': 'core_user',
            },
        ),
    ]
